package org.example;

/**
 * Інтерфейс, що визначає базову поведінку вузла дерева розбору виразу.
 * <p>
 * Будь-який вузол (константа, змінна, бінарна операція, унарна операція тощо)
 * повинен реалізовувати цей інтерфейс.
 */
public interface ExpressionNode {
    /**
     * Повертає текстове (структуроване) представлення виразу.
     * Наприклад: {@code "(x + 5)"} або {@code "42.0"} або {@code "x"}.
     *
     * @return рядок з представленням виразу
     */
    String toString();

    /**
     * Обчислює числове значення виразу, підставляючи значення змінних
     * з переданої мапи.
     *
     * @param variables мапа значень змінних (ключ — ім'я змінної, значення — число)
     * @return числовий результат обчислення виразу
     * @throws IllegalArgumentException якщо для використаної у виразі змінної
     *                                  не знайдено значення в {@code variables}
     *                                  або якщо зустрічається невідомий оператор
     *                                  у конкретній реалізації
     */
    double evaluate(java.util.Map<String, Double> variables);
}
